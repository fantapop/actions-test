name: "Destroy Preview Deployments"
on:
  pull_request_target:
    branches:
      - "main"
    types: 
      - "closed"
    paths:
      - "the-ui/**"
jobs:
  debug:
    runs-on: "ubuntu-latest"
    steps:
    - env:
        EVENT_CONTEXT: ${{ toJSON(github.event) }}
      run: echo $EVENT_CONTEXT

  destroy_deployments:
    name: "Delete deployments"
    runs-on: "ubuntu-latest"
    # DEBUG: does this fix the "can't delete an environment" issue?
    permissions: "write-all"
    steps:
    - name: "Delete deployments"
      uses: "actions/github-script@v6"
      env:
        PR_NUMBER: ${{ github.event.pull_request.number }}
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          ["staging", "prod"].forEach(async (cc_env) => {
            const req = {
                owner: owner,
                repo: repo,
                environment: `UI Previews (${cc_env} backend)`,
            };
            const deployments = github.rest.paginate.iterator(repos.listDeployments, req);

            for await (const deployment of deployments) {
              if (deployment.payload.pr_number !== ${{ github.event.pull_request.number }}) {
                console.log("Skipping not-matching deployment:", deployment);
                continue
              }

              console.log("!!! found matching deployment:", deployment);
              await github.rest.repos.createDeploymentStatus({
                owner: owner,
                repo: repo,
                deployment_id: deployment.id,
                state: "inactive",
                auto_inactive: false
              });

              await github.rest.repos.deleteDeployment({
                owner: owner,
                repo: repo,
                deployment_id: deployment.id,
              });
            }
